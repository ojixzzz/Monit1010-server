import time
import requests
import memcache
import googleanalytics as ga
from datetime import datetime

mc = memcache.Client(['127.0.0.1:11211'], debug=1)

autodownload = ga.authenticate(
    identity='',
    account='',
    webproperty='',
    profile='All Web Site Data'
    )

link4share = ga.authenticate(
    identity='',
    account='',
    webproperty='',
    profile='link4share'
    )

apkpoke = ga.authenticate(
    identity='',
    account='',
    webproperty='',
    profile=''
    )

while True:
    autodownload_list = autodownload.core.query.metrics('sessions').daily(datetime.now(), days=-3).values
    autodownload_online = autodownload.realtime.query.metrics('activeUsers').value

    link4share_list = link4share.core.query.metrics('sessions').daily(datetime.now(), days=-3).values
    link4share_online = link4share.realtime.query.metrics('activeUsers').value

    apkpoke_list = apkpoke.core.query.metrics('sessions').daily(datetime.now(), days=-3).values
    apkpoke_online = apkpoke.realtime.query.metrics('activeUsers').value

    urls = {
        'apkpoke': 'https://apkpoke.com',
        'link-4share': 'https://link-4share.com',
        'auto-download': 'http://auto-download.com'   
    }

    for url in urls:
        try: 
            req = requests.get(urls[url], timeout=3)
            if req.status_code != 200:
                server_status = 'Error! <small>%s</small>' % url
                break
            else:
                server_status = 'OK!'
        except Exception as e:
            server_status = 'Error! <small>%s</small>' % url
            break

    data = {
        "autodownload_list": autodownload_list,
        "autodownload_online": autodownload_online or 0,
        "link4share_list": link4share_list,
        "link4share_online": link4share_online or 0,
        "apkpoke_list": apkpoke_list,
        "apkpoke_online": apkpoke_online or 0,
        "server_status": server_status
    }

    mc.set("monit1010", data, 1000)
    time.sleep(3)
